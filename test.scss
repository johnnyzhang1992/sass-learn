// 变量声明（define variable）
$height-color : #42c3ef;
$highlight-color: #f90;
$highlight-border: 1px soild $highlight-color;
$nav-color: #f90;
$side : left;
// 变量的引用
div{
  color: $height_color;
  width: auto;
}
.select{
  border: $highlight-border;
}
nav{
  $width:100px; // 当变量定义在css 规则块内,那么该变量只能在该规则块内使用
  width:$width;
  color: $nav-color;
}
.rounded{
  border-#{$side}-radius:5px;
  color: $height-color;
}

// 嵌套css
#content {
  background-color: #f5f5f5;
  article {
    h1 { color: #333 }
    p { margin-bottom: 1.4em }
  }
  aside { background-color: #EEE }
}
// 编译后
//#content {  background-color: #f5f5f5; }
//#content article h1 {  color: #333; }
//#content article p {  margin-bottom: 1.4em; }
//#content aside {  background-color: #EEE; }

// 父选择器的标志符 &
 .article a{
   color: blue;
   :hover{color: blue}
   &:hover{color: red}
 }
 // 编译后
.article a {  color: blue; }
.article a :hover {  color: blue; } //article元素内链接的所有子元素在被hover时都会变成红色
.article a:hover {  color: red; } //article元素内的链接在被hover时都会变成红色

#content aside {
  color: red;
  opacity: 0.8;
  body.ie & { color: green }
}
// 编译后
#content aside {  color: red; }
body.ie #content aside {  color: green; }

// 群组选择器的嵌套

.button, button {
  margin: 0;
}
h1,h2,h3{
  color: #333
}
.container {
  h1, h2, h3 {margin-bottom: .8em}
}
// 编译后
.container h1, .container h2, .container h3 {  margin-bottom: .8em; }

nav, aside {
  a {color: blue}
}
// 编译后
nav a, aside a {  color: blue; }

// 子组合选择器和同层组合选择器：>、+和~
article section { margin: 5px } //article 下的所有section 元素
article > section { border: 1px solid #ccc } // article下紧跟着的子元素中命中section选择器的元素
header + p { font-size: 1.1em } //同层相邻组合选择器+选择header元素后紧跟的p元素
article ~ article { border-top: 1px dashed #ccc } //  同层全体组合选择器~，选择所有跟在article后的同层article元素

article {
  ~ article { border-top: 1px dashed #ccc }
  > section { background: #eee }
  dl > {
    dt { color: #333 }
    dd { color: #555 }
  }
  nav + & { margin-top: 0 }
}

// 编译后
//article section {  margin: 5px; }
//article > section {  border: 1px solid #ccc; }
//header + p {  font-size: 1.1em; }
//article ~ article {  border-top: 1px dashed #ccc; }

//article ~ article {  border-top: 1px dashed #ccc; }
//article > section {  background: #eee; }
//article dl > dt {  color: #333; }
//article dl > dd {  color: #555; }
//nav + article {  margin-top: 0; }

// 2-4. 嵌套属性;
nav {
  border: {
    style: solid;
    width: 1px;
    color: #ccc;
  }
}
// 编译后
//nav {  border-style: solid;  border-width: 1px;  border-color: #ccc; }

nav {
  border: 1px solid #ccc {
    left: 0px;
    right: 0px;
  }
}
// 编译后
//nav {  border: 1px solid #ccc;  border-left: 0px;  border-right: 0px; }

// 默认变量值
$fancybox-width: 400px !default; //默认变量值
.fancybox {
  width: $fancybox-width;
}

//嵌套导入

.blue-theme {
  @import "blue-theme";
}
// 编译后
//.blue-theme aside {  background: blue;  color: #333; }

// 静默注释

body {
  color: #333; // 这种注释内容不会出现在生成的css文件中
  padding: 0; /* 这种注释内容会出现在生成的css文件中 */
}
// 混合器

@mixin border-radius {
  -moz-border-radius: 5px;
  -webkit-border-radius: 5px;
  border-radius: 5px;
}

.notice {
  background-color: green;
  border: 2px solid #00aa00;
  @include border-radius;
}

// 编译后

.notice {
  background-color: green;
  border: 2px solid #00aa00;
  -moz-border-radius: 5px;
  -webkit-border-radius: 5px;
  border-radius: 5px;
}
/* 混合器中的CSS规则 */
@mixin no-bullets {
  list-style: none;
  li {
    list-style-image: none;
    list-style-type: none;
    margin-left: 0px;
    &:hover{color:red};
  }
}
ul.plain {
  color: #444;
  @include no-bullets;
}
// 编译后
ul.plain {
  color: #444;
  list-style: none;
}
ul.plain li {
  list-style-image: none;
  list-style-type: none;
  margin-left: 0px;
}
ul.plain li:hover {
  color: red;
}
/*  给混合器传参 */

@mixin link-colors($normal, $hover, $visited) {
  color: $normal;
  &:hover { color: $hover; }
  &:visited { color: $visited; }
}
a {
  @include link-colors(blue, red, green);
}

// 编译后
//a {  color: blue;  }
//a:hover {  color: red;  }
//a:visited {  color: green;  }

// 也可以这样传参
li a {
  @include link-colors(
          $normal: blue,
          $visited: green,
          $hover: red
  );
}
// 编译后
//li a {  color: blue; }
//li a:hover {  color: red; }
//li a:visited {  color: green; }

//默认参数值
@mixin link-colors(
  $normal,
  $hover: $normal,
  $visited: $normal
)
{
  color: $normal;
  &:hover { color: $hover; }
  &:visited { color: $visited; }
}

.link a{
  @include link-colors(red);
}
// 编译后
.link a {  color: red; }
.link a:hover {  color: red; }
.link a:visited {  color: red; }


















